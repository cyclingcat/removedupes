#!/bin/bash

SHORTNAME="removedupes"
VERSION="0.5"
BETA_SUBVERSION="4"
UUID="{a300a000-5e21-4ee0-a115-9ec8f4eaa92b}"

TARGET="$1"
case "$TARGET" in
#	suiterunner | sr | srunner)
#		TARGET=suiterunner
#		PREPROCESSOR_PARAMS="-DMOZ_TOOLKIT_SEAMONKEY"
#		;;
	tbird | tb | thunderbird)
		TARGET=tbird
		PREPROCESSOR_PARAMS="-DMOZ_THUNDERBIRD"
		;;
	*)
	echo "Only \"thunderbird\" is currently supported as a target application."
#	echo "Please specify either \"thunderbird\" or \"suiterunner\"."
	exit 1
	;;
esac

# build betas by default

if [ -z "$EXTENSION_RELEASE" ]; then
	VERSION="${VERSION}b${BETA_SUBVERSION}"
fi

shift 1

# all arguments after the target app are #define 'd in the XUL preprocessor,
# with a DEBUG_ prefix; so if you want to, say, have debugging code specific
# to the function myFancyFunc(), write it like so:
#
#   #ifdef DEBUG_myFancyFunc 
#     debugging code etc. etc.
#   #endif
# 
# then invoke
#
#   dobuild tbird myFancyFunc
#
# to have your debugging code enabled

if [ -n "$1" ]; then
	PREPROCESSOR_PARAMS+=" -DDEBUG"
	while [ -n "$1" ]; do
		PREPROCESSOR_PARAMS="$PREPROCESSOR_PARAMS -DDEBUG_$1"
		shift 1
	done
else
	PREPROCESSOR_PARAMS+=" --no-line-comments"
fi

PREPROCESSOR_PARAMS="$PREPROCESSOR_PARAMS -DVERSION=$VERSION -DUUID=$UUID -DSHORTNAME=$SHORTNAME"
BUILDDIR="build/$TARGET"
XPINAME="${SHORTNAME}_${VERSION}_${TARGET}.xpi"
LINKNAME="${SHORTNAME}_${TARGET}.xpi"
BUILDTOOLSDIR="buildtools"
export PERL5LIB="`pwd`/$BUILDTOOLSDIR"

# TODO: split builddir by /'s and try to create everything along the path
if [ ! -d build ] ; then mkdir build; fi
if [ ! -d $BUILDDIR ] ; then mkdir $BUILDDIR; else rm -rf $BUILDDIR/*; fi

$BUILDTOOLSDIR/preprocessor.pl $PREPROCESSOR_PARAMS jar.mn > $BUILDDIR/jar.mn
# Our invocation of make-jars.pl doesn't literally make JAR files, it only preprocesses and copies.
$BUILDTOOLSDIR/make-jars.pl -q -f flat -z zip -p "$BUILDTOOLSDIR/preprocessor.pl $PREPROCESSOR_PARAMS"  -s . -d . < $BUILDDIR/jar.mn || exit
$BUILDTOOLSDIR/preprocessor.pl $PREPROCESSOR_PARAMS src/manifest.json > $BUILDDIR/manifest.json
mkdir -p $BUILDDIR/defaults/preferences
cp src/defaults/preferences/${SHORTNAME}.js $BUILDDIR/defaults/preferences
mkdir -p $BUILDDIR/api/WindowListener
cp src/background.js $BUILDDIR/background.js
cp src/api/WindowListener/schema.json $BUILDDIR/api/WindowListener
cp src/api/WindowListener/implementation.js $BUILDDIR/api/WindowListener

mv ${SHORTNAME} $BUILDDIR/chrome

cp LICENSE $BUILDDIR

case "$TARGET" in
	tbird)
	cd $BUILDDIR
	zip --quiet -r $XPINAME  \
		LICENSE \
		chrome/ \
		defaults/ \
		api/ \
		manifest.json \
		background.js \
		|| exit
		;;
esac
ln $XPINAME $LINKNAME
